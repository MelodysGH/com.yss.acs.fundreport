package com.yss.acs.fundreport.util;

import com.yss.sofa.framework.dao.Dao.DBType;

/**
 * 数据库转换函数类
 * 
 * @author zhanglq
 * @version 1.0,2015-3-14
 * @since 1.0,2015-3-14
 */
public class DBUtil{
    
    final public static int DB_SQL = 0;

    final public static int DB_ORA = 1;

    final public static int DB_DB2 = 2;

    final public static int DB_MSL = 3; // mysql

    final static String YSS_DATEFORMAT = "yyyy-MM-dd";

    private static int dbType = 1;
    
    /**不让sofa翻译,在最后加上这个*/
    public static final String NO_TRANSFER = " --SQLTD";

    public static void setDbType(DBType dbtype) {
        if (dbtype.isOracle()) {
            DBUtil.dbType = DB_ORA;
        }
        if (dbtype.isSQLServer()) {
            DBUtil.dbType = DB_SQL;
        }
        if (dbtype.isDB2()) {
            DBUtil.dbType = DB_DB2;
        }
    }
    
    /**
	 * 字符串转换成数字函数
	 * @param sStr1 字符串
	 * @return
	 */
	public static String sqlNumber(String sStr1) {
		switch(dbType){
		case DB_ORA:return "to_number(" + sStr1 + ")";
		default:return "cast(" + sStr1 + " as numeric(18,2))";
		}
		
	}
	/**
	 * 功能说明：两种日期类型转换(java.sql.Date and java.util.Date)
	 * 
	 * @param dDate java.util.Date类型的日期
	 * @return java.sql.Date 类型的日期
	 */
	public static java.sql.Date toSqlDate(java.util.Date dDate) {
		return new java.sql.Date(dDate.getTime());
	}
	/**
	 * 使用in做子查询时因为数据库的列表sql限制，不能超过1000。拼装sql语句
	 * @param str
	 * @param file
	 * @return
	 */
		public static String getInSql (String str,String file){
			String whereSql = "  1=1 ";
			
			String[] sysNos = str.split(",");
			StringBuffer buff = new StringBuffer();
			int key =1;
			int yus = sysNos.length%1000;
			for(int i=1; i<=sysNos.length; i++){
				buff.append(sysNos[i-1].toString() ).append(",");
				if(key==1000){
					buff.setLength(buff.length()-1);
					buff.append("\t");
					key =1;
				}else if(i+yus == sysNos.length){
					buff.setLength(buff.length()-1);
					buff.append("\t");
					key =1;
				}
				key++;
			}
			buff.setLength(buff.length()-1);
			String[] rebuff = buff.toString().split("\t");
			whereSql += " and (";
			for(int j = 0; j<rebuff.length; j ++ ){
				if(j==rebuff.length-1){
					whereSql += " "+file+"  in ("+rebuff[j].toString()+")  ";
				}else{
					whereSql +=" "+file+" in ("+rebuff[j].toString()+") or ";
				}
				
			}
			whereSql += " ) ";
			
			return whereSql ;
		}
}
